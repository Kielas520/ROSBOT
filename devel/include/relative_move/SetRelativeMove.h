// Generated by gencpp from file relative_move/SetRelativeMove.msg
// DO NOT EDIT!


#ifndef RELATIVE_MOVE_MESSAGE_SETRELATIVEMOVE_H
#define RELATIVE_MOVE_MESSAGE_SETRELATIVEMOVE_H

#include <ros/service_traits.h>


#include <relative_move/SetRelativeMoveRequest.h>
#include <relative_move/SetRelativeMoveResponse.h>


namespace relative_move
{

struct SetRelativeMove
{

typedef SetRelativeMoveRequest Request;
typedef SetRelativeMoveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetRelativeMove
} // namespace relative_move


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::relative_move::SetRelativeMove > {
  static const char* value()
  {
    return "2f55ab509885410fe15bd79d5cf0ed25";
  }

  static const char* value(const ::relative_move::SetRelativeMove&) { return value(); }
};

template<>
struct DataType< ::relative_move::SetRelativeMove > {
  static const char* value()
  {
    return "relative_move/SetRelativeMove";
  }

  static const char* value(const ::relative_move::SetRelativeMove&) { return value(); }
};


// service_traits::MD5Sum< ::relative_move::SetRelativeMoveRequest> should match
// service_traits::MD5Sum< ::relative_move::SetRelativeMove >
template<>
struct MD5Sum< ::relative_move::SetRelativeMoveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::relative_move::SetRelativeMove >::value();
  }
  static const char* value(const ::relative_move::SetRelativeMoveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::relative_move::SetRelativeMoveRequest> should match
// service_traits::DataType< ::relative_move::SetRelativeMove >
template<>
struct DataType< ::relative_move::SetRelativeMoveRequest>
{
  static const char* value()
  {
    return DataType< ::relative_move::SetRelativeMove >::value();
  }
  static const char* value(const ::relative_move::SetRelativeMoveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::relative_move::SetRelativeMoveResponse> should match
// service_traits::MD5Sum< ::relative_move::SetRelativeMove >
template<>
struct MD5Sum< ::relative_move::SetRelativeMoveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::relative_move::SetRelativeMove >::value();
  }
  static const char* value(const ::relative_move::SetRelativeMoveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::relative_move::SetRelativeMoveResponse> should match
// service_traits::DataType< ::relative_move::SetRelativeMove >
template<>
struct DataType< ::relative_move::SetRelativeMoveResponse>
{
  static const char* value()
  {
    return DataType< ::relative_move::SetRelativeMove >::value();
  }
  static const char* value(const ::relative_move::SetRelativeMoveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RELATIVE_MOVE_MESSAGE_SETRELATIVEMOVE_H
